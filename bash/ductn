#!/usr/bin/env bash
#!/bin/bash

_MYSQL_REPLICATE=""
_MYSQL_REPLICATE_TOOGLE=""
_MYSQL_REPLICATE_TOOGLE=""
_MYSQL_REPLICATE_HOST=0

_DEBUG=0

--httpd() {
    cd "$(dirname "$0")"
    ./bash/ductn_httpd
}

--swap() {
    cd "$(dirname "$0")"
    ./bash/ductn_swap
}

mysql() {
    cd "$(dirname "$0")"
    ./bash/ductn_mysql
}

--aliases() {
    cd "$(dirname "$0")"
    ./bash/ductn_init aliases
}

--composer() {
    cd "$(dirname "$0")"
    ./bash/ductn_composer
}

--wslcli() {
    --install() {
        if grep -q Microsoft /proc/version; then
            mkdir -p /mnt/c/wslcli/
            cat /var/www/base/bash/win10/php.bat >/mnt/c/wslcli/php.bat
            cat /var/www/base/bash/win10/yarn.bat >/mnt/c/wslcli/yarn.bat
            cat /var/www/base/bash/win10/phpcs.bat >/mnt/c/wslcli/phpcs.bat
        fi
    }

    -i() {
        --install
    }

    $@
}

--dns() {
    cd "$(dirname "$0")"
    ./bash/ductn_dns
}

--gitconfig() {

    cd "$(dirname "$0")"
    ./ductn_git $@

    # git config http.postBuffer 524288000
    # git config receive.denyCurrentBranch refuse

}

--git() {
    --gitconfig $@
}

--ssl() {
    cd "$(dirname "$0")"
    ./bash/ductn_ssl
}

--ssh() {
    cd "$(dirname "$0")"
    ./bash/ductn_ssh
}

--user() {
    cd "$(dirname "$0")"
    ./bash/ductn_user
}

--hosts() {
    #!/usr/bin/env bash
    # copy from https://gist.github.com/irazasyed/a7b0a079e7727a4315b9

    # PATH TO YOUR HOSTS FILE
    ETC_HOSTS=/etc/hosts

    # DEFAULT IP FOR HOSTNAME
    IP=$2

    # Hostname to add/remove.
    HOSTNAME=$3

    remove() {
        echo "removing host"
        if [[ -n "$(grep $HOSTNAME /etc/hosts)" ]]; then
            echo "$HOSTNAME Found in your $ETC_HOSTS, Removing now..."
            sudo sed -i".bak" "/$HOSTNAME/d" ${ETC_HOSTS}
        else
            echo "$HOSTNAME was not found in your $ETC_HOSTS"
        fi
    }

    add() {
        echo "adding host"
        HOSTS_LINE="$IP\t$HOSTNAME"
        if [[ -n "$(grep $HOSTNAME /etc/hosts)" ]]; then
            echo "$HOSTNAME already exists : $(grep $HOSTNAME ${ETC_HOSTS})"
        else
            echo "Adding $HOSTNAME to your $ETC_HOSTS"
            sudo -- sh -c -e "echo '$HOSTS_LINE' >> /etc/hosts"

            if [[ -n "$(grep $HOSTNAME /etc/hosts)" ]]; then
                echo "$HOSTNAME was added successfully \n $(grep $HOSTNAME /etc/hosts)"
            else
                echo "Failed to Add $HOSTNAME, Try again!"
            fi
        fi
    }

    $@
}

--mysql-cluster() {
    --install() {
        # ductn_hosts add 35.229.247.242  server.diepxuan.com
        # ductn_hosts add 35.232.100.140  server2.diepxuan.com
        # ductn_hosts add 103.56.156.159  server3.diepxuan.com
        # wget https://repo.mysql.com//mysql-apt-config_0.8.15-1_all.deb -O mysql-apt-config.deb
        # sudo dpkg -i mysql-apt-config.deb
        # rm -rf mysql-apt-config.deb

        cd "$(dirname "$0")"

        _exec() {
            echo "dx$@.diepxuan.com"
            ssh dx$@.diepxuan.com "
                sudo mkdir -p /var/lib/mysql-cluster/
                echo \"net.ipv4.ip_forward = 1\"        | sudo tee /etc/sysctl.d/999-mysql-cluster.conf
                echo \"net.ipv4.ip_nonlocal_bind = 1\"  | sudo tee -a /etc/sysctl.d/999-mysql-cluster.conf
                sudo sysctl -f /etc/sysctl.d/999-mysql-cluster.conf
            "
            cat mysql_cluster/mysql-cluster.config.ini | ssh dx$@.diepxuan.com "sudo tee /var/lib/mysql-cluster/config.ini"
            cat mysql_cluster/mysqld.cnf | ssh dx$@.diepxuan.com "sudo tee /etc/mysql/conf.d/mysqld_cluster.cnf"
            cat mysql_cluster/dx$@.mysqld.cnf | ssh dx$@.diepxuan.com "sudo tee -a /etc/mysql/conf.d/mysqld_cluster.cnf"
            cat mysql_cluster/ndb_mgmd.service | ssh dx$@.diepxuan.com "sudo tee /etc/systemd/system/ndb_mgmd.service"
            cat mysql_cluster/ndbd.service | ssh dx$@.diepxuan.com "sudo tee /etc/systemd/system/ndbd.service"
            ssh dx$@.diepxuan.com "
                sudo systemctl daemon-reload
                # sudo systemctl enable ndb_mgmd
                # sudo systemctl restart ndb_mgmd
                # sudo service ndb_mgmd restart
                # sudo service ndbd restart
                # sudo service mysql restart
            "
        }

        _exec 3
        _exec 2
        _exec 1
    }

    --remove() {
        _exec() {
            ssh dx$@.diepxuan.com "
                sudo systemctl stop ndb_mgmd
                sudo systemctl disable ndb_mgmd
                sudo systemctl stop ndbd
                sudo systemctl disable ndbd

                sudo rm -rf /var/lib/mysql-cluster/config.ini
                sudo rm -rf /etc/mysql/conf.d/mysqld_cluster.cnf
                sudo rm -rf /etc/systemd/system/ndb_mgmd.service
                sudo rm -rf /etc/systemd/system/ndbd.service
                sudo rm -rf /var/lib/mysql-cluster

                sudo apt remove mysql-apt-config mysql-cluster-community-management-server -y --purge --auto-remove
                sudo apt update
                sudo apt dist-upgrade -y --purge --auto-remove
            "
        }

        _exec 3
        _exec 2
        _exec 1
    }

    $@
}

--cronjob() {
    cd "$(dirname "$0")"
    ./bash/ductn_cronjob
}

--cron() {
    --cronjob
}

cron(){
    --cron 
}

log() {
    cd "$(dirname "$0")"
    ./bash/ductn_log
}

--update() {

    allowip() {

        allowdomain() {
            getip() {
                echo "$(host $@ | cut -f4 -d' ')"
            }
            local Current_IP="$(getip $@)"
            sudo ufw allow from ${Current_IP} to any
            # echo "${Current_IP}"
        }

        allowdomain dxvnkthd.ddns.net
        allowdomain dxvnk113.ddns.net
        allowdomain dxvnkkcn.ddns.net
        allowdomain mg15vincom.ddns.net
    }

    $@

}

--fix() {
    #!/bin/bash

    apt() {
        sudo killall apt-get
        sudo killall apt

        sudo rm /var/lib/apt/lists/lock
        sudo rm /var/cache/apt/archives/lock
        sudo rm /var/lib/dpkg/lock
        sudo rm /var/lib/dpkg/lock-frontend

        sudo dpkg --configure -a
    }

    $@
}

--cleanup() {
    #!/bin/sh

    # Check the Drive Space Used by Cached Files
    # du -sh /var/cache/apt/archives

    # Clean all the log file
    # for logs in `find /var/log -type f`;  do > $logs; done

    logs=$(sudo find /var/log /var/opt/mssql/log -type f)
    for i in $logs; do
        sudo truncate -s 0 $i
    done

    #Getting rid of partial packages
    # sudo apt-get clean && sudo apt-get autoclean
    # apt-get remove --purge -y software-properties-common

    #Getting rid of no longer required packages
    # sudo apt-get autoremove -y

    #Getting rid of orphaned packages
    # deborphan | xargs sudo apt-get -y remove --purge

    #Free up space by clean out the cached packages
    # apt-get clean

    # Remove the Trash
    sudo rm -rf /home/*/.local/share/Trash/*/**
    sudo rm -rf /root/.local/share/Trash/*/**

    # Remove Man
    sudo rm -rf /usr/share/man/??
    sudo rm -rf /usr/share/man/??_*

    #Delete all .gz and rotated file
    # sudo find /var/log -type f -regex ".*\.gz$" | xargs sudo rm -Rf
    # sudo find /var/log -type f -regex ".*\.[0-9]$" | xargs sudo rm -Rf
    sudo find /var/log /var/opt/mssql/log -type f -regex ".*\.gz$" -delete
    sudo find /var/log /var/opt/mssql/log -type f -regex ".*\.[0-9]$" -delete

    #Cleaning the old kernels
    # dpkg-query -l|grep linux-im*
    #dpkg-query -l |grep linux-im*|awk '{print $2}'
    # apt-get purge $(dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' | head -n -1) --assume-yes
    # apt-get install linux-headers-`uname -r|cut -d'-' -f3`-`uname -r|cut -d'-' -f4`

    #Cleaning is completed
    echo "Cleaning is completed"
}

init() {
    --init
}

--init() {
    cd "$(dirname "$0")"
    ./ductn_init
}

mysql-replicate() {
    _MYSQL_REPLICATE="on"

    while [ $# -gt 0 ]; do
        case $1 in
        -i | --install) _MYSQL_REPLICATE_TOOGLE="on" ;;
        --remove) _MYSQL_REPLICATE_TOOGLE="off" ;;
        --host=?* | -h=?*) _MYSQL_REPLICATE_HOST=${1#*=} ;;
        --host | -h)
            _MYSQL_REPLICATE_HOST=$2
            shift
            ;;
        --host=)
            die 'ERROR: "--host" requires a non-empty option argument.'
            ;;
        --) break ;;
        -?*) printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2 ;;
        *) break ;;
        esac

        shift
    done

}

mysql-galera() {

    _MYSQL_GALERA="on"
    _MYSQL_GALERA_HOST=1

    while [ $# -gt 0 ]; do
        case $1 in
        -i | --install) _MYSQL_GALERA_TOOGLE="on" ;;
        --setup) _MYSQL_GALERA_SETUP="on" ;;
        --remove) _MYSQL_GALERA_TOOGLE="off" ;;
        --host=?* | -h=?*) _MYSQL_GALERA_HOST=${1#*=} ;;
        --host | -h)
            _MYSQL_GALERA_HOST=$2
            shift
            ;;
        --host=)
            die 'ERROR: "--host" requires a non-empty option argument.'
            ;;
        --) break ;;
        -?*) printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2 ;;
        *) break ;;
        esac

        shift
    done

}

pull() {
    cd "$(dirname "$0")"
    git fetch -ap
    git reset --hard origin/master
}

$@

cd "$(dirname "$0")"

F_mysql_replicate() {

    --install() {
        # ductn_hosts add 35.229.247.242  server.diepxuan.com
        # ductn_hosts add 35.232.100.140  server2.diepxuan.com
        # ductn_hosts add 103.56.156.159  server3.diepxuan.com
        # wget https://repo.mysql.com//mysql-apt-config_0.8.15-1_all.deb -O mysql-apt-config.deb
        # sudo dpkg -i mysql-apt-config.deb
        # rm -rf mysql-apt-config.deb

        sudo mkdir -p /var/lib/mysql-cluster/

        cat mysql_replicate/mysqld.cnf | sudo tee /etc/mysql/conf.d/mysqld_cluster.cnf
        cat mysql_replicate/dx$@.mysqld.cnf | sudo tee -a /etc/mysql/conf.d/mysqld_cluster.cnf

        sudo service mysql restart

        sudo mysql <mysql_replicate/replicate.sql

    }

    --remove() {
        sudo rm -rf /etc/mysql/conf.d/mysqld_cluster.cnf
        sudo mysql <mysql_replicate/remove.sql
        sudo service mysql restart
    }

    $@
}

if [[ $_MYSQL_REPLICATE = "on" ]]; then
    # echo "_MYSQL_REPLICATE = $_MYSQL_REPLICATE"
    if [[ $_MYSQL_REPLICATE_TOOGLE = "on" ]]; then
        # echo "_MYSQL_REPLICATE_TOOGLE = $_MYSQL_REPLICATE_TOOGLE"
        # echo "_MYSQL_REPLICATE_HOST = $_MYSQL_REPLICATE_HOST"
        F_mysql_replicate --install $_MYSQL_REPLICATE_HOST
    else
        F_mysql_replicate --remove
    fi
fi

F_mysql_galera() {

    --setup() {
        cd ~
        sudo add-apt-repository universe
        sudo apt install -y --purge --auto-remove software-properties-common apt-transport-https
        sudo add-apt-repository universe -r
        wget https://downloads.mariadb.com/MariaDB/mariadb_repo_setup -O mariasetup
        chmod +x mariasetup
        sudo ./mariasetup --mariadb-server-version="mariadb-10.3"
        sudo rm -rf ~/mariadb_repo_setup*
        sudo rm -rf ~/mariasetup*

        sudo apt update
        sudo apt install rsync mariadb-server mariadb-client
    }

    --install() {
        cd "$(dirname "$0")"

        cat mysql_galera/mysqld.cnf | sudo tee /etc/mysql/conf.d/mysqld_cluster.cnf
        cat mysql_galera/dx${_MYSQL_GALERA_HOST}.mysqld.cnf | sudo tee -a /etc/mysql/conf.d/mysqld_cluster.cnf

        sudo galera_new_cluster
        sudo service mysql restart
    }

    --remove() {
        sudo rm -rf /etc/mysql/conf.d/mysqld_cluster.cnf
        sudo rm -rf /etc/apt/sources.list.d/galera.list
        sudo rm -rf /etc/apt/preferences.d/galera.pref
    }

    $@
}

if [[ $_MYSQL_GALERA = "on" ]]; then
    if [[ $_MYSQL_GALERA_SETUP = "on" ]]; then
        F_mysql_galera --setup
    fi

    if [[ $_MYSQL_GALERA_TOOGLE = "on" ]]; then
        F_mysql_galera --install
    elif [[ $_MYSQL_GALERA_TOOGLE = "off" ]]; then
        F_mysql_galera --remove
    fi
fi
