name: Build

on:
  push:
    branches: [main]
    # paths:
    # - "src/debian/changelog"
    paths-ignore:
      - "**/changelog"
      - "**.md"
  pull_request:
    branches: [main]
    # paths:
    # - "src/debian/changelog"
    paths-ignore:
      - "**/changelog"
      - "**.md"
  workflow_dispatch:
jobs:
  package-build:
    runs-on: ${{matrix.operating-system}}
    strategy:
      fail-fast: false
      matrix:
        # operating-system: [ubuntu-22.04, ubuntu-20.04]
        operating-system: [ubuntu-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Create GPG key if not exists
      #     gpg --full-generate-key
      # List to select GPG key
      #     gpg --list-secret-keys --keyid-format=long
      #     Example: rsa3072/7E0EC917A5074BD3 2023-03-13 [SC] [expires: 2025-03-12]
      # Generate key as base64
      #     gpg --export-secret-keys 3AA5C34371567BD2 | base64
      - name: Dynamically set environment variable
        run: |
          sudo timedatectl set-timezone Asia/Ho_Chi_Minh
          bash ci/environment.sh
        env:
          repository: ${{ github.repository }}
          branch: ${{ github.ref_name }}
          OBS_USERNAME: ${{ secrets.OBS_USERNAME }}
          OBS_TOKEN: ${{ secrets.OBS_TOKEN }}
          OBS_PW: ${{ secrets.OBS_PW }}
          OBS_OPPW: ${{ secrets.OBS_OPPW }}
          KITE_TOKEN: ${{ secrets.KITE_TOKEN }}
      - name: Git configuration
        run: |
          echo "$GPG_KEY====" | tr -d '\n' | fold -w 4 | sed '$ d' | tr -d '\n' | fold -w 76 | base64 -di | gpg --batch --import || true
          gpg --list-secret-keys --keyid-format=long
          git config --global user.email "$GIT_COMMITTER_EMAIL"
          git config --global user.name "$GIT_COMMITTER_NAME"
          git config --global commit.gpgsign true
          git config --global user.signingkey $GPG_KEY_ID
        env:
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ github.repository_owner }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      - name: SSH configuration
        shell: bash
        run: |
          mkdir -p ~/.ssh
          [[ ! -f "~/.ssh/id_rsa" ]] && echo "$SSH_ID_RSA" > ~/.ssh/id_rsa || (echo "$SSH_ID_RSA" > ~/.ssh/id_rsa_work && ssh-add ~/.ssh/id_rsa_work)
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/*
        env:
          SSH_ID_RSA: ${{ secrets.SSH_ID_RSA }}
      - name: Installing build dependencies
        run: bash ci/depends.sh
      - name: Updating build information
        env:
          DEBEMAIL: ductn@diepxuan.com
          EMAIL: ductn@diepxuan.com
          DEBFULLNAME: Tran Ngoc Duc
          NAME: Tran Ngoc Duc
        run: bash ci/update_packages.sh
      - name: Pre-build package binary
        run: bash ci/pre_build.sh
      - name: Building package binary
        env:
          BUILDPACKAGE_OPTS: --force-sign
        run: bash ci/build.sh
      - name: Building package source
        env:
          BUILDPACKAGE_OPTS: --force-sign -S
        run: bash ci/build.sh
      - name: Put package to Personal Package archives
        env:
          repository: ${{ github.repository }}
          SSH_ID_RSA: ${{ secrets.SSH_ID_RSA }}
        run: bash ci/put_ppa_packages.sh

  package-publish:
    needs: package-build
    permissions:
      contents: write
    uses: diepxuan/.github/.github/workflows/debian-package-publish.yml@main
    secrets:
      GPG_KEY: ${{ secrets.GPG_KEY }}
      GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
      GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
      SSH_ID_RSA: ${{ secrets.SSH_ID_RSA }}
