#!/usr/bin/env bash

_BASEDIR="/var/www/base"
_BASHDIR="$_BASEDIR/bash"

--install() {
    $_BASHDIR/ductn --swap --install
    sudo apt install -y --purge --auto-remove mysql-server
    # sudo mysql_secure_installation
}

--ssl:enable() {
    DIR=/etc/mysql/certs/

    mkdir $DIR
    # openssl genrsa 4096 | sudo tee ca-key.pem
    sudo cp $_BASHDIR/mysql/ssl/*.pem $DIR
    sudo openssl req -new -x509 -nodes -days 365000 -key $DIR/ca-key.pem -out $DIR/ca-cert.pem

    sudo openssl req -newkey rsa:2048 -days 365000 -nodes -keyout $DIR/server-key.pem -out $DIR/server-req.pem
    sudo openssl rsa -in $DIR/server-key.pem -out $DIR/server-key.pem
    sudo openssl x509 -req -in $DIR/server-req.pem -days 365000 -CA $DIR/ca-cert.pem -CAkey $DIR/ca-key.pem -set_serial 01 -out $DIR/server-cert.pem

    sudo openssl req -newkey rsa:2048 -days 365000 -nodes -keyout $DIR/client-key.pem -out $DIR/client-req.pem
    sudo openssl rsa -in $DIR/client-key.pem -out $DIR/client-key.pem
    sudo openssl x509 -req -in $DIR/client-req.pem -days 365000 -CA $DIR/ca-cert.pem -CAkey $DIR/ca-key.pem -set_serial 01 -out $DIR/client-cert.pem

    openssl verify -CAfile $DIR/ca-cert.pem $DIR/server-cert.pem $DIR/client-cert.pem
    cat $_BASHDIR/mysql/ssl/10-ssl.cnf | sudo tee /etc/mysql/conf.d/10-ssl.cnf

    sudo chown -R mysql:root $DIR
}

galera() {

    _MYSQL_GALERA="on"
    _MYSQL_GALERA_HOST=1

    while [ $# -gt 0 ]; do
        case $1 in
        -i | --install) _MYSQL_GALERA_TOOGLE="on" ;;
        --setup) _MYSQL_GALERA_SETUP="on" ;;
        --remove) _MYSQL_GALERA_TOOGLE="off" ;;
        --host=?* | -h=?*) _MYSQL_GALERA_HOST=${1#*=} ;;
        --host | -h)
            _MYSQL_GALERA_HOST=$2
            shift
            ;;
        --host=)
            die 'ERROR: "--host" requires a non-empty option argument.'
            ;;
        --) break ;;
        -?*) printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2 ;;
        *) break ;;
        esac

        shift
    done

}

"--$@"

F_mysql_galera() {

    --setup() {
        cd ~
        sudo add-apt-repository universe
        sudo apt install -y --purge --auto-remove software-properties-common apt-transport-https
        sudo add-apt-repository universe -r
        wget https://downloads.mariadb.com/MariaDB/mariadb_repo_setup -O mariasetup
        chmod +x mariasetup
        sudo ./mariasetup --mariadb-server-version="mariadb-10.3"
        sudo rm -rf ~/mariadb_repo_setup*
        sudo rm -rf ~/mariasetup*

        sudo apt update
        sudo apt install rsync mariadb-server mariadb-client
    }

    --install() {
        cd "$(dirname "$0")"

        cat $_BASHDIR/mysql_galera/mysqld.cnf | sudo tee /etc/mysql/conf.d/mysqld_cluster.cnf
        cat $_BASHDIR/mysql_galera/dx${_MYSQL_GALERA_HOST}.mysqld.cnf | sudo tee -a /etc/mysql/conf.d/mysqld_cluster.cnf

        sudo galera_new_cluster
        sudo service mysql restart
    }

    --remove() {
        sudo rm -rf /etc/mysql/conf.d/mysqld_cluster.cnf
        sudo rm -rf /etc/apt/sources.list.d/galera.list
        sudo rm -rf /etc/apt/preferences.d/galera.pref
    }

    $@
}

if [[ $_MYSQL_GALERA = "on" ]]; then
    if [[ $_MYSQL_GALERA_SETUP = "on" ]]; then
        F_mysql_galera --setup
    fi

    if [[ $_MYSQL_GALERA_TOOGLE = "on" ]]; then
        F_mysql_galera --install
    elif [[ $_MYSQL_GALERA_TOOGLE = "off" ]]; then
        F_mysql_galera --remove
    fi
fi

--mysql-cluster() {
    --install() {
        # ductn_hosts add 35.229.247.242  server.diepxuan.com
        # ductn_hosts add 35.232.100.140  server2.diepxuan.com
        # ductn_hosts add 103.56.156.159  server3.diepxuan.com
        # wget https://repo.mysql.com//mysql-apt-config_0.8.15-1_all.deb -O mysql-apt-config.deb
        # sudo dpkg -i mysql-apt-config.deb
        # rm -rf mysql-apt-config.deb

        cd "$_BASHDIR"

        _exec() {
            echo "dx$@.diepxuan.com"
            ssh dx$@.diepxuan.com "
                sudo mkdir -p /var/lib/mysql-cluster/
                echo \"net.ipv4.ip_forward = 1\"        | sudo tee /etc/sysctl.d/999-mysql-cluster.conf
                echo \"net.ipv4.ip_nonlocal_bind = 1\"  | sudo tee -a /etc/sysctl.d/999-mysql-cluster.conf
                sudo sysctl -f /etc/sysctl.d/999-mysql-cluster.conf
            "
            cat mysql_cluster/mysql-cluster.config.ini | ssh dx$@.diepxuan.com "sudo tee /var/lib/mysql-cluster/config.ini"
            cat mysql_cluster/mysqld.cnf | ssh dx$@.diepxuan.com "sudo tee /etc/mysql/conf.d/mysqld_cluster.cnf"
            cat mysql_cluster/dx$@.mysqld.cnf | ssh dx$@.diepxuan.com "sudo tee -a /etc/mysql/conf.d/mysqld_cluster.cnf"
            cat mysql_cluster/ndb_mgmd.service | ssh dx$@.diepxuan.com "sudo tee /etc/systemd/system/ndb_mgmd.service"
            cat mysql_cluster/ndbd.service | ssh dx$@.diepxuan.com "sudo tee /etc/systemd/system/ndbd.service"
            ssh dx$@.diepxuan.com "
                sudo systemctl daemon-reload
                # sudo systemctl enable ndb_mgmd
                # sudo systemctl restart ndb_mgmd
                # sudo service ndb_mgmd restart
                # sudo service ndbd restart
                # sudo service mysql restart
            "
        }

        _exec 3
        _exec 2
        _exec 1
    }

    --remove() {
        _exec() {
            ssh dx$@.diepxuan.com "
                sudo systemctl stop ndb_mgmd
                sudo systemctl disable ndb_mgmd
                sudo systemctl stop ndbd
                sudo systemctl disable ndbd

                sudo rm -rf /var/lib/mysql-cluster/config.ini
                sudo rm -rf /etc/mysql/conf.d/mysqld_cluster.cnf
                sudo rm -rf /etc/systemd/system/ndb_mgmd.service
                sudo rm -rf /etc/systemd/system/ndbd.service
                sudo rm -rf /var/lib/mysql-cluster

                sudo apt remove mysql-apt-config mysql-cluster-community-management-server -y --purge --auto-remove
                sudo apt update
                sudo apt dist-upgrade -y --purge --auto-remove
            "
        }

        _exec 3
        _exec 2
        _exec 1
    }

    $@
}

--mysql-replicate() {
    _MYSQL_REPLICATE="on"

    while [ $# -gt 0 ]; do
        case $1 in
        -i | --install) _MYSQL_REPLICATE_TOOGLE="on" ;;
        --remove) _MYSQL_REPLICATE_TOOGLE="off" ;;
        --host=?* | -h=?*) _MYSQL_REPLICATE_HOST=${1#*=} ;;
        --host | -h)
            _MYSQL_REPLICATE_HOST=$2
            shift
            ;;
        --host=)
            die 'ERROR: "--host" requires a non-empty option argument.'
            ;;
        --) break ;;
        -?*) printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2 ;;
        *) break ;;
        esac

        shift
    done

}

F_mysql_replicate() {

    --install() {
        # ductn_hosts add 35.229.247.242  server.diepxuan.com
        # ductn_hosts add 35.232.100.140  server2.diepxuan.com
        # ductn_hosts add 103.56.156.159  server3.diepxuan.com
        # wget https://repo.mysql.com//mysql-apt-config_0.8.15-1_all.deb -O mysql-apt-config.deb
        # sudo dpkg -i mysql-apt-config.deb
        # rm -rf mysql-apt-config.deb

        cd "$_BASHDIR"

        sudo mkdir -p /var/lib/mysql-cluster/

        cat $_BASHDIR/mysql_replicate/mysqld.cnf | sudo tee /etc/mysql/conf.d/mysqld_cluster.cnf
        cat $_NASHDIR/mysql_replicate/dx$@.mysqld.cnf | sudo tee -a /etc/mysql/conf.d/mysqld_cluster.cnf

        sudo service mysql restart

        sudo mysql <mysql_replicate/replicate.sql

    }

    --remove() {
        sudo rm -rf /etc/mysql/conf.d/mysqld_cluster.cnf
        sudo mysql <mysql_replicate/remove.sql
        sudo service mysql restart
    }

    $@
}

if [[ $_MYSQL_REPLICATE = "on" ]]; then
    # echo "_MYSQL_REPLICATE = $_MYSQL_REPLICATE"
    if [[ $_MYSQL_REPLICATE_TOOGLE = "on" ]]; then
        # echo "_MYSQL_REPLICATE_TOOGLE = $_MYSQL_REPLICATE_TOOGLE"
        # echo "_MYSQL_REPLICATE_HOST = $_MYSQL_REPLICATE_HOST"
        F_mysql_replicate --install $_MYSQL_REPLICATE_HOST
    else
        F_mysql_replicate --remove
    fi
fi
